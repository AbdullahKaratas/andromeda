// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package geographic_maps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/andromeda/models"
)

// PostGeomapsCreatedCode is the HTTP code returned for type PostGeomapsCreated
const PostGeomapsCreatedCode int = 201

/*
PostGeomapsCreated Created geomap.

swagger:response postGeomapsCreated
*/
type PostGeomapsCreated struct {

	/*
	  In: Body
	*/
	Payload *PostGeomapsCreatedBody `json:"body,omitempty"`
}

// NewPostGeomapsCreated creates PostGeomapsCreated with default headers values
func NewPostGeomapsCreated() *PostGeomapsCreated {

	return &PostGeomapsCreated{}
}

// WithPayload adds the payload to the post geomaps created response
func (o *PostGeomapsCreated) WithPayload(payload *PostGeomapsCreatedBody) *PostGeomapsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post geomaps created response
func (o *PostGeomapsCreated) SetPayload(payload *PostGeomapsCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGeomapsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostGeomapsBadRequestCode is the HTTP code returned for type PostGeomapsBadRequest
const PostGeomapsBadRequestCode int = 400

/*
PostGeomapsBadRequest Bad request

swagger:response postGeomapsBadRequest
*/
type PostGeomapsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostGeomapsBadRequest creates PostGeomapsBadRequest with default headers values
func NewPostGeomapsBadRequest() *PostGeomapsBadRequest {

	return &PostGeomapsBadRequest{}
}

// WithPayload adds the payload to the post geomaps bad request response
func (o *PostGeomapsBadRequest) WithPayload(payload *models.Error) *PostGeomapsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post geomaps bad request response
func (o *PostGeomapsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGeomapsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostGeomapsNotFoundCode is the HTTP code returned for type PostGeomapsNotFound
const PostGeomapsNotFoundCode int = 404

/*
PostGeomapsNotFound Not Found

swagger:response postGeomapsNotFound
*/
type PostGeomapsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostGeomapsNotFound creates PostGeomapsNotFound with default headers values
func NewPostGeomapsNotFound() *PostGeomapsNotFound {

	return &PostGeomapsNotFound{}
}

// WithPayload adds the payload to the post geomaps not found response
func (o *PostGeomapsNotFound) WithPayload(payload *models.Error) *PostGeomapsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post geomaps not found response
func (o *PostGeomapsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGeomapsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostGeomapsDefault Unexpected Error

swagger:response postGeomapsDefault
*/
type PostGeomapsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostGeomapsDefault creates PostGeomapsDefault with default headers values
func NewPostGeomapsDefault(code int) *PostGeomapsDefault {
	if code <= 0 {
		code = 500
	}

	return &PostGeomapsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post geomaps default response
func (o *PostGeomapsDefault) WithStatusCode(code int) *PostGeomapsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post geomaps default response
func (o *PostGeomapsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post geomaps default response
func (o *PostGeomapsDefault) WithPayload(payload *models.Error) *PostGeomapsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post geomaps default response
func (o *PostGeomapsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGeomapsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
