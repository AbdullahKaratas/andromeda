// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/andromeda/models"
)

// GetMetricsAkamaiTotalDNSRequestsOKCode is the HTTP code returned for type GetMetricsAkamaiTotalDNSRequestsOK
const GetMetricsAkamaiTotalDNSRequestsOKCode int = 200

/*
GetMetricsAkamaiTotalDNSRequestsOK Total DNS requests data

swagger:response getMetricsAkamaiTotalDnsRequestsOK
*/
type GetMetricsAkamaiTotalDNSRequestsOK struct {

	/*
	  In: Body
	*/
	Payload *models.AkamaiTotalDNSResult `json:"body,omitempty"`
}

// NewGetMetricsAkamaiTotalDNSRequestsOK creates GetMetricsAkamaiTotalDNSRequestsOK with default headers values
func NewGetMetricsAkamaiTotalDNSRequestsOK() *GetMetricsAkamaiTotalDNSRequestsOK {

	return &GetMetricsAkamaiTotalDNSRequestsOK{}
}

// WithPayload adds the payload to the get metrics akamai total Dns requests o k response
func (o *GetMetricsAkamaiTotalDNSRequestsOK) WithPayload(payload *models.AkamaiTotalDNSResult) *GetMetricsAkamaiTotalDNSRequestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get metrics akamai total Dns requests o k response
func (o *GetMetricsAkamaiTotalDNSRequestsOK) SetPayload(payload *models.AkamaiTotalDNSResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMetricsAkamaiTotalDNSRequestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMetricsAkamaiTotalDNSRequestsBadRequestCode is the HTTP code returned for type GetMetricsAkamaiTotalDNSRequestsBadRequest
const GetMetricsAkamaiTotalDNSRequestsBadRequestCode int = 400

/*
GetMetricsAkamaiTotalDNSRequestsBadRequest Bad request

swagger:response getMetricsAkamaiTotalDnsRequestsBadRequest
*/
type GetMetricsAkamaiTotalDNSRequestsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMetricsAkamaiTotalDNSRequestsBadRequest creates GetMetricsAkamaiTotalDNSRequestsBadRequest with default headers values
func NewGetMetricsAkamaiTotalDNSRequestsBadRequest() *GetMetricsAkamaiTotalDNSRequestsBadRequest {

	return &GetMetricsAkamaiTotalDNSRequestsBadRequest{}
}

// WithPayload adds the payload to the get metrics akamai total Dns requests bad request response
func (o *GetMetricsAkamaiTotalDNSRequestsBadRequest) WithPayload(payload *models.Error) *GetMetricsAkamaiTotalDNSRequestsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get metrics akamai total Dns requests bad request response
func (o *GetMetricsAkamaiTotalDNSRequestsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMetricsAkamaiTotalDNSRequestsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetMetricsAkamaiTotalDNSRequestsDefault Unexpected Error

swagger:response getMetricsAkamaiTotalDnsRequestsDefault
*/
type GetMetricsAkamaiTotalDNSRequestsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMetricsAkamaiTotalDNSRequestsDefault creates GetMetricsAkamaiTotalDNSRequestsDefault with default headers values
func NewGetMetricsAkamaiTotalDNSRequestsDefault(code int) *GetMetricsAkamaiTotalDNSRequestsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetMetricsAkamaiTotalDNSRequestsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get metrics akamai total DNS requests default response
func (o *GetMetricsAkamaiTotalDNSRequestsDefault) WithStatusCode(code int) *GetMetricsAkamaiTotalDNSRequestsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get metrics akamai total DNS requests default response
func (o *GetMetricsAkamaiTotalDNSRequestsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get metrics akamai total DNS requests default response
func (o *GetMetricsAkamaiTotalDNSRequestsDefault) WithPayload(payload *models.Error) *GetMetricsAkamaiTotalDNSRequestsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get metrics akamai total DNS requests default response
func (o *GetMetricsAkamaiTotalDNSRequestsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMetricsAkamaiTotalDNSRequestsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
