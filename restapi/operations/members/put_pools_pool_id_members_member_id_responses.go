// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/andromeda/models"
)

// PutPoolsPoolIDMembersMemberIDAcceptedCode is the HTTP code returned for type PutPoolsPoolIDMembersMemberIDAccepted
const PutPoolsPoolIDMembersMemberIDAcceptedCode int = 202

/*
PutPoolsPoolIDMembersMemberIDAccepted Updated member.

swagger:response putPoolsPoolIdMembersMemberIdAccepted
*/
type PutPoolsPoolIDMembersMemberIDAccepted struct {

	/*
	  In: Body
	*/
	Payload *PutPoolsPoolIDMembersMemberIDAcceptedBody `json:"body,omitempty"`
}

// NewPutPoolsPoolIDMembersMemberIDAccepted creates PutPoolsPoolIDMembersMemberIDAccepted with default headers values
func NewPutPoolsPoolIDMembersMemberIDAccepted() *PutPoolsPoolIDMembersMemberIDAccepted {

	return &PutPoolsPoolIDMembersMemberIDAccepted{}
}

// WithPayload adds the payload to the put pools pool Id members member Id accepted response
func (o *PutPoolsPoolIDMembersMemberIDAccepted) WithPayload(payload *PutPoolsPoolIDMembersMemberIDAcceptedBody) *PutPoolsPoolIDMembersMemberIDAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put pools pool Id members member Id accepted response
func (o *PutPoolsPoolIDMembersMemberIDAccepted) SetPayload(payload *PutPoolsPoolIDMembersMemberIDAcceptedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPoolsPoolIDMembersMemberIDAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutPoolsPoolIDMembersMemberIDNotFoundCode is the HTTP code returned for type PutPoolsPoolIDMembersMemberIDNotFound
const PutPoolsPoolIDMembersMemberIDNotFoundCode int = 404

/*
PutPoolsPoolIDMembersMemberIDNotFound Not Found

swagger:response putPoolsPoolIdMembersMemberIdNotFound
*/
type PutPoolsPoolIDMembersMemberIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutPoolsPoolIDMembersMemberIDNotFound creates PutPoolsPoolIDMembersMemberIDNotFound with default headers values
func NewPutPoolsPoolIDMembersMemberIDNotFound() *PutPoolsPoolIDMembersMemberIDNotFound {

	return &PutPoolsPoolIDMembersMemberIDNotFound{}
}

// WithPayload adds the payload to the put pools pool Id members member Id not found response
func (o *PutPoolsPoolIDMembersMemberIDNotFound) WithPayload(payload *models.Error) *PutPoolsPoolIDMembersMemberIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put pools pool Id members member Id not found response
func (o *PutPoolsPoolIDMembersMemberIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPoolsPoolIDMembersMemberIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutPoolsPoolIDMembersMemberIDDefault Unexpected Error

swagger:response putPoolsPoolIdMembersMemberIdDefault
*/
type PutPoolsPoolIDMembersMemberIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutPoolsPoolIDMembersMemberIDDefault creates PutPoolsPoolIDMembersMemberIDDefault with default headers values
func NewPutPoolsPoolIDMembersMemberIDDefault(code int) *PutPoolsPoolIDMembersMemberIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutPoolsPoolIDMembersMemberIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put pools pool ID members member ID default response
func (o *PutPoolsPoolIDMembersMemberIDDefault) WithStatusCode(code int) *PutPoolsPoolIDMembersMemberIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put pools pool ID members member ID default response
func (o *PutPoolsPoolIDMembersMemberIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put pools pool ID members member ID default response
func (o *PutPoolsPoolIDMembersMemberIDDefault) WithPayload(payload *models.Error) *PutPoolsPoolIDMembersMemberIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put pools pool ID members member ID default response
func (o *PutPoolsPoolIDMembersMemberIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPoolsPoolIDMembersMemberIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
