// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/andromeda/models"
)

// DeletePoolsPoolIDReader is a Reader for the DeletePoolsPoolID structure.
type DeletePoolsPoolIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePoolsPoolIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePoolsPoolIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeletePoolsPoolIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeletePoolsPoolIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeletePoolsPoolIDNoContent creates a DeletePoolsPoolIDNoContent with default headers values
func NewDeletePoolsPoolIDNoContent() *DeletePoolsPoolIDNoContent {
	return &DeletePoolsPoolIDNoContent{}
}

/* DeletePoolsPoolIDNoContent describes a response with status code 204, with default header values.

Resource successfully deleted.
*/
type DeletePoolsPoolIDNoContent struct {
}

func (o *DeletePoolsPoolIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /pools/{pool_id}][%d] deletePoolsPoolIdNoContent ", 204)
}

func (o *DeletePoolsPoolIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePoolsPoolIDNotFound creates a DeletePoolsPoolIDNotFound with default headers values
func NewDeletePoolsPoolIDNotFound() *DeletePoolsPoolIDNotFound {
	return &DeletePoolsPoolIDNotFound{}
}

/* DeletePoolsPoolIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeletePoolsPoolIDNotFound struct {
	Payload *models.Error
}

func (o *DeletePoolsPoolIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /pools/{pool_id}][%d] deletePoolsPoolIdNotFound  %+v", 404, o.Payload)
}
func (o *DeletePoolsPoolIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeletePoolsPoolIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePoolsPoolIDDefault creates a DeletePoolsPoolIDDefault with default headers values
func NewDeletePoolsPoolIDDefault(code int) *DeletePoolsPoolIDDefault {
	return &DeletePoolsPoolIDDefault{
		_statusCode: code,
	}
}

/* DeletePoolsPoolIDDefault describes a response with status code -1, with default header values.

Unexpected Error
*/
type DeletePoolsPoolIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete pools pool ID default response
func (o *DeletePoolsPoolIDDefault) Code() int {
	return o._statusCode
}

func (o *DeletePoolsPoolIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /pools/{pool_id}][%d] DeletePoolsPoolID default  %+v", o._statusCode, o.Payload)
}
func (o *DeletePoolsPoolIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeletePoolsPoolIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
