// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 SAP SE
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/sapcc/andromeda/models"
)

// GetPoolsPoolIDMembersReader is a Reader for the GetPoolsPoolIDMembers structure.
type GetPoolsPoolIDMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPoolsPoolIDMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPoolsPoolIDMembersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPoolsPoolIDMembersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetPoolsPoolIDMembersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPoolsPoolIDMembersOK creates a GetPoolsPoolIDMembersOK with default headers values
func NewGetPoolsPoolIDMembersOK() *GetPoolsPoolIDMembersOK {
	return &GetPoolsPoolIDMembersOK{}
}

/* GetPoolsPoolIDMembersOK describes a response with status code 200, with default header values.

A JSON array of members
*/
type GetPoolsPoolIDMembersOK struct {
	Payload *GetPoolsPoolIDMembersOKBody
}

func (o *GetPoolsPoolIDMembersOK) Error() string {
	return fmt.Sprintf("[GET /pools/{pool_id}/members][%d] getPoolsPoolIdMembersOK  %+v", 200, o.Payload)
}
func (o *GetPoolsPoolIDMembersOK) GetPayload() *GetPoolsPoolIDMembersOKBody {
	return o.Payload
}

func (o *GetPoolsPoolIDMembersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPoolsPoolIDMembersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoolsPoolIDMembersBadRequest creates a GetPoolsPoolIDMembersBadRequest with default headers values
func NewGetPoolsPoolIDMembersBadRequest() *GetPoolsPoolIDMembersBadRequest {
	return &GetPoolsPoolIDMembersBadRequest{}
}

/* GetPoolsPoolIDMembersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetPoolsPoolIDMembersBadRequest struct {
	Payload *models.Error
}

func (o *GetPoolsPoolIDMembersBadRequest) Error() string {
	return fmt.Sprintf("[GET /pools/{pool_id}/members][%d] getPoolsPoolIdMembersBadRequest  %+v", 400, o.Payload)
}
func (o *GetPoolsPoolIDMembersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPoolsPoolIDMembersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoolsPoolIDMembersDefault creates a GetPoolsPoolIDMembersDefault with default headers values
func NewGetPoolsPoolIDMembersDefault(code int) *GetPoolsPoolIDMembersDefault {
	return &GetPoolsPoolIDMembersDefault{
		_statusCode: code,
	}
}

/* GetPoolsPoolIDMembersDefault describes a response with status code -1, with default header values.

Unexpected Error
*/
type GetPoolsPoolIDMembersDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get pools pool ID members default response
func (o *GetPoolsPoolIDMembersDefault) Code() int {
	return o._statusCode
}

func (o *GetPoolsPoolIDMembersDefault) Error() string {
	return fmt.Sprintf("[GET /pools/{pool_id}/members][%d] GetPoolsPoolIDMembers default  %+v", o._statusCode, o.Payload)
}
func (o *GetPoolsPoolIDMembersDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPoolsPoolIDMembersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetPoolsPoolIDMembersOKBody get pools pool ID members o k body
swagger:model GetPoolsPoolIDMembersOKBody
*/
type GetPoolsPoolIDMembersOKBody struct {

	// links
	Links []*models.Link `json:"links,omitempty"`

	// members
	Members []*models.Member `json:"members"`
}

// Validate validates this get pools pool ID members o k body
func (o *GetPoolsPoolIDMembersOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMembers(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPoolsPoolIDMembersOKBody) validateLinks(formats strfmt.Registry) error {
	if swag.IsZero(o.Links) { // not required
		return nil
	}

	for i := 0; i < len(o.Links); i++ {
		if swag.IsZero(o.Links[i]) { // not required
			continue
		}

		if o.Links[i] != nil {
			if err := o.Links[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPoolsPoolIdMembersOK" + "." + "links" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getPoolsPoolIdMembersOK" + "." + "links" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPoolsPoolIDMembersOKBody) validateMembers(formats strfmt.Registry) error {
	if swag.IsZero(o.Members) { // not required
		return nil
	}

	for i := 0; i < len(o.Members); i++ {
		if swag.IsZero(o.Members[i]) { // not required
			continue
		}

		if o.Members[i] != nil {
			if err := o.Members[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPoolsPoolIdMembersOK" + "." + "members" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getPoolsPoolIdMembersOK" + "." + "members" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get pools pool ID members o k body based on the context it is used
func (o *GetPoolsPoolIDMembersOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLinks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMembers(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPoolsPoolIDMembersOKBody) contextValidateLinks(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Links); i++ {

		if o.Links[i] != nil {
			if err := o.Links[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPoolsPoolIdMembersOK" + "." + "links" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getPoolsPoolIdMembersOK" + "." + "links" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPoolsPoolIDMembersOKBody) contextValidateMembers(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Members); i++ {

		if o.Members[i] != nil {
			if err := o.Members[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPoolsPoolIdMembersOK" + "." + "members" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getPoolsPoolIdMembersOK" + "." + "members" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPoolsPoolIDMembersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPoolsPoolIDMembersOKBody) UnmarshalBinary(b []byte) error {
	var res GetPoolsPoolIDMembersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
